basePath: /
definitions:
  api.AddMenuAuthorityInfo:
    properties:
      authorityId:
        type: string
      menus:
        items:
          $ref: '#/definitions/sysModel.SysBaseMenu'
        type: array
    type: object
  api.AuthorityIdInfo:
    properties:
      authorityId:
        type: string
    type: object
  api.ChangePasswordStutrc:
    properties:
      newPassword:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  api.CreateApiParams:
    properties:
      description:
        type: string
      path:
        type: string
    type: object
  api.GetById:
    properties:
      id:
        type: number
    type: object
  api.IdInfo:
    properties:
      id:
        type: number
    type: object
  api.RegisterAndLoginStuct:
    properties:
      captcha:
        type: string
      captchaId:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  api.SetUserAuth:
    properties:
      authorityId:
        type: string
      uuid:
        type: string
    type: object
  autoCodeModel.AutoCodeStruct:
    properties:
      abbreviation:
        type: string
      fields:
        items:
          $ref: '#/definitions/autoCodeModel.Field'
        type: array
      packageName:
        type: string
      structName:
        type: string
    type: object
  autoCodeModel.Field:
    properties:
      columnName:
        type: string
      fieldJson:
        type: string
      fieldName:
        type: string
      fieldType:
        type: string
    type: object
  config.Captcha:
    properties:
      imgHeight:
        type: integer
      imgWidth:
        type: integer
      keyLong:
        type: integer
    type: object
  config.CasbinConfig:
    properties:
      modelPath:
        description: casbin model地址配置
        type: string
    type: object
  config.Config:
    properties:
      captcha:
        $ref: '#/definitions/config.Captcha'
        type: object
      casbinConfig:
        $ref: '#/definitions/config.CasbinConfig'
        type: object
      jwt:
        $ref: '#/definitions/config.JWT'
        type: object
      log:
        $ref: '#/definitions/config.Log'
        type: object
      mysqlAdmin:
        $ref: '#/definitions/config.MysqlAdmin'
        type: object
      qiniu:
        $ref: '#/definitions/config.Qiniu'
        type: object
      redisAdmin:
        $ref: '#/definitions/config.RedisAdmin'
        type: object
      system:
        $ref: '#/definitions/config.System'
        type: object
    type: object
  config.JWT:
    properties:
      signingKey:
        type: string
    type: object
  config.Log:
    properties:
      file:
        description: 在文件中打印log的级别   []默认不打印
        items:
          type: string
        type: array
      logFile:
        description: 是否显示打印log的文件具体路径
        type: boolean
      prefix:
        description: log 打印的前缀
        type: string
      stdout:
        description: 在控制台打印log的级别， []默认不打印
        items:
          type: string
        type: array
    type: object
  config.MysqlAdmin:
    properties:
      config:
        type: string
      dbname:
        type: string
      maxIdleConns:
        type: integer
      maxOpenConns:
        type: boolean
      password:
        type: string
      path:
        type: string
      username:
        type: string
    type: object
  config.Qiniu:
    properties:
      accessKey:
        type: string
      secretKey:
        type: string
    type: object
  config.RedisAdmin:
    properties:
      addr:
        type: string
      db:
        type: integer
      password:
        type: string
    type: object
  config.System:
    properties:
      addr:
        type: integer
      env:
        type: string
      useMultipoint:
        type: boolean
    type: object
  dbModel.ExaCustomer:
    properties:
      customerName:
        type: string
      customerPhoneData:
        type: string
      sysUser:
        $ref: '#/definitions/sysModel.SysUser'
        type: object
      sysUserAuthorityID:
        type: string
      sysUserId:
        type: integer
    type: object
  dbModel.ExaFileUploadAndDownload:
    properties:
      key:
        type: string
      name:
        type: string
      tag:
        type: string
      url:
        type: string
    type: object
  modelInterface.PageInfo:
    properties:
      page:
        type: integer
      pageSize:
        type: integer
    type: object
  sysModel.CasbinInReceive:
    properties:
      authorityId:
        type: string
      casbinInfos:
        items:
          $ref: '#/definitions/sysModel.CasbinInfo'
        type: array
    type: object
  sysModel.CasbinInfo:
    properties:
      method:
        type: string
      path:
        type: string
    type: object
  sysModel.SysApi:
    properties:
      description:
        type: string
      group:
        type: string
      method:
        type: string
      path:
        type: string
    type: object
  sysModel.SysAuthority:
    properties:
      authorityId:
        type: string
      authorityName:
        type: string
      children:
        items:
          $ref: '#/definitions/sysModel.SysAuthority'
        type: array
      dataAuthorityId:
        items:
          $ref: '#/definitions/sysModel.SysAuthority'
        type: array
      parentId:
        type: string
    type: object
  sysModel.SysBaseMenu:
    properties:
      children:
        items:
          $ref: '#/definitions/sysModel.SysBaseMenu'
        type: array
      component:
        type: string
      hidden:
        type: boolean
      icon:
        type: string
      name:
        type: string
      nickName:
        type: string
      parentId:
        type: string
      path:
        type: string
      sort:
        type: string
      title:
        type: string
    type: object
  sysModel.SysUser:
    properties:
      authority:
        $ref: '#/definitions/sysModel.SysAuthority'
        type: object
      authorityId:
        type: string
      headerImg:
        type: string
      nickName:
        type: string
      userName:
        type: string
      uuid:
        type: string
    type: object
  sysModel.SysWorkflow:
    properties:
      workflowDescription:
        description: 工作流描述
        type: string
      workflowName:
        description: 工作流英文id
        type: string
      workflowNickName:
        description: 工作流名称
        type: string
      workflowStep:
        description: 工作流步骤
        items:
          $ref: '#/definitions/sysModel.SysWorkflowStepInfo'
        type: array
    type: object
  sysModel.SysWorkflowStepInfo:
    properties:
      isEnd:
        description: 是否是完结流节点
        type: boolean
      isStrat:
        description: 是否是开始流节点
        type: boolean
      stepAuthorityID:
        description: 操作者级别id
        type: string
      stepName:
        description: 工作流名称
        type: string
      stepNo:
        description: 步骤id （第几步）
        type: number
      workflowID:
        description: 所属工作流ID
        type: integer
    type: object
  sysModel.System:
    properties:
      config:
        $ref: '#/definitions/config.Config'
        type: object
    type: object
  userJobs.Joblist:
    properties:
      company_id:
        type: integer
      company_img:
        type: string
      company_name:
        type: string
      job_city:
        type: string
      job_city_id:
        type: integer
      job_edu:
        type: string
      job_name:
        type: string
      job_salary_high:
        type: integer
      job_salary_low:
        type: integer
      job_type:
        type: string
      job_years:
        type: string
    type: object
info:
  contact: {}
  description: This is a sample Server pets
  license: {}
  title: Swagger Example API
  version: 0.0.1
paths:
  /api/createApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建api
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.CreateApiParams'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建基础api
      tags:
      - SysApi
  /api/deleteApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除api
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.SysApi'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除指定api
      tags:
      - SysApi
  /api/getAllApis:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取所有的Api 不分页
      tags:
      - SysApi
  /api/getApiById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取用户列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取api
      tags:
      - SysApi
  /api/getApiList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取API列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取API列表
      tags:
      - SysApi
  /api/updateApi:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建api
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.CreateApiParams'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建基础api
      tags:
      - SysApi
  /authority/createAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - authority
  /authority/deleteAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - authority
  /authority/getAuthorityList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取用户列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取角色列表
      tags:
      - authority
  /authority/setDataAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设置角色资源权限
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.SysAuthority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置角色资源权限
      tags:
      - authority
  /autoCode/createTemp:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建自动代码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/autoCodeModel.AutoCodeStruct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"创建成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 自动代码模板
      tags:
      - SysApi
  /base/captcha:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 生成验证码
      tags:
      - base
  /base/captcha/:captchaId:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 生成验证码图片路径
      tags:
      - base
  /base/login:
    post:
      parameters:
      - description: 用户登录接口
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.RegisterAndLoginStuct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登陆成功"}'
          schema:
            type: string
      summary: 用户登录
      tags:
      - Base
  /base/register:
    post:
      parameters:
      - description: 用户注册接口
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"注册成功"}'
          schema:
            type: string
      summary: 用户注册账号
      tags:
      - Base
  /casbin/CasbinTest:
    get:
      consumes:
      - application/json
      parameters:
      - description: 获取权限列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: casb RBAC RESTFUL测试路由
      tags:
      - casbin
  /casbin/casbinPUpdate:
    post:
      consumes:
      - application/json
      parameters:
      - description: 更改角色api权限
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更改角色api权限
      tags:
      - casbin
  /casbin/getPolicyPathByAuthorityId:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取权限列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.CasbinInReceive'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取权限列表
      tags:
      - casbin
  /customer/createExaCustomer:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建客户
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dbModel.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建客户
      tags:
      - SysApi
  /customer/deleteExaCustomer:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除客户
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dbModel.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除客户
      tags:
      - SysApi
  /customer/getExaCustomer:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取单一客户信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dbModel.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取单一客户信息
      tags:
      - SysApi
  /customer/getExaCustomerList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 获取权限客户列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取权限客户列表
      tags:
      - SysApi
  /customer/updateExaCustomer:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建客户
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dbModel.ExaCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新客户信息
      tags:
      - SysApi
  /fileUploadAndDownload/breakpointContinue:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 断点续传示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"上传成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 断点续传到服务器
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/deleteFile:
    post:
      parameters:
      - description: 传入文件里面id即可
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dbModel.ExaFileUploadAndDownload'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"返回成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/findFile:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 查找文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查找成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 查找文件
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/getFileList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取文件户列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页文件列表
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/removeChunk:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 查找文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查找成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除切片
      tags:
      - ExaFileUploadAndDownload
  /fileUploadAndDownload/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 上传文件示例
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"上传成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 上传文件示例
      tags:
      - ExaFileUploadAndDownload
  /jl/createJoblist:
    post:
      consumes:
      - application/json
      parameters:
      - description: 创建Joblist
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/userJobs.Joblist'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 创建Joblist
      tags:
      - Joblist
  /jl/deleteJoblist:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除Joblist
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/userJobs.Joblist'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除Joblist
      tags:
      - Joblist
  /jl/findJoblist:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用id查询Joblist
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/userJobs.Joblist'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"查询成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用id查询Joblist
      tags:
      - Joblist
  /jl/getJoblistList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取Joblist列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取Joblist列表
      tags:
      - Joblist
  /jl/updateJoblist:
    post:
      consumes:
      - application/json
      parameters:
      - description: 更新Joblist
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/userJobs.Joblist'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新Joblist
      tags:
      - Joblist
  /jwt/jsonInBlacklist:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"拉黑成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: jwt加入黑名单
      tags:
      - jwt
  /menu/addBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 新增菜单
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 新增菜单
      tags:
      - menu
  /menu/addMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 增加menu和角色关联关系
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.AuthorityIdInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取指定角色menu
      tags:
      - authorityAndMenu
  /menu/deleteBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 删除菜单
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.IdInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除菜单
      tags:
      - menu
  /menu/getBaseMenuById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 根据id获取菜单
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取菜单
      tags:
      - menu
  /menu/getBaseMenuTree:
    post:
      parameters:
      - description: 可以什么都不填
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.RegisterAndLoginStuct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"返回成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - authorityAndMenu
  /menu/getMenu:
    post:
      parameters:
      - description: 可以什么都不填
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.RegisterAndLoginStuct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"返回成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - authorityAndMenu
  /menu/getMenuList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取基础menu列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取基础menu列表
      tags:
      - menu
  /menu/updateBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 更新菜单
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新菜单
      tags:
      - menu
  /system/ReloadSystem:
    post:
      parameters:
      - description: 设置配置文件内容
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.System'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"返回成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置配置文件内容
      tags:
      - system
  /system/getSystemConfig:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"返回成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取配置文件内容
      tags:
      - system
  /system/setSystemConfig:
    post:
      parameters:
      - description: 设置配置文件内容
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.System'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"返回成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置配置文件内容
      tags:
      - system
  /user/changePassword:
    post:
      parameters:
      - description: 用户修改密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.ChangePasswordStutrc'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户修改密码
      tags:
      - SysUser
  /user/getUserList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 分页获取用户列表
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/modelInterface.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户列表
      tags:
      - SysUser
  /user/setUserAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设置用户权限
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.SetUserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置用户权限
      tags:
      - SysUser
  /user/uploadHeaderImg:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 用户上传头像
        in: formData
        name: headerImg
        required: true
        type: file
      - description: 用户上传头像
        in: formData
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"上传成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户上传头像
      tags:
      - SysUser
  /workflow/createWorkFlow:
    post:
      parameters:
      - description: 注册工作流接口
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/sysModel.SysWorkflow'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"注册成功"}'
          schema:
            type: string
      summary: 注册工作流
      tags:
      - workflow
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: x-token
    type: apiKey
swagger: "2.0"
